{"version":3,"sources":["webpack:///./src/components/PagesRegister/PagesRegisterContent/index.js","webpack:///./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","webpack:///./node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","webpack:///./node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","webpack:///./node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","webpack:///./src/components/PagesRegister/PagesRegisterStep2Content/index.js","webpack:///./src/pages/Register/index.js"],"names":["className","href","PagesRegisterContent","props","userValue","setUserValue","React","useState","handleChangeField","name","event","target","value","Grid","container","spacing","item","xs","Container","maxWidth","TextField","variant","label","fullWidth","placeholder","type","onChange","Button","color","size","onClick","onClickContinue","forwardRef","ref","children","classes","_props$disableTypogra","disableTypography","other","createElement","root","Typography","component","withStyles","margin","padding","flex","_props$dividers","dividers","theme","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","concat","palette","divider","borderBottom","marginBottom","_props$disableSpacing","disableSpacing","display","alignItems","justifyContent","marginLeft","id","PagesRegisterStep2Content","userInfo","showAlert","setShowAlert","handleCloseAlert","md","onClickBack","icon","email","disabled","console","log","password1","password2","onClickRegister","Dialog","open","onClose","aria-labelledby","aria-describedby","autoFocus","HeaderHome","FooterSection","PagesRegister","registerStep","setRegisterStep","onRegister","data","username","signupWithAPI","then","res","history","push","catch","error","onBack","onRegisterClick"],"mappings":"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","file":"js/11.js","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Container,\n  Button,\n  TextField,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst PagesRegisterContent = (props) => {\n  const [userValue, setUserValue] = React.useState({});\n\n  const handleChangeField = (name, event) => {\n    setUserValue({\n      ...userValue,\n      [name]: event.target.value\n    } );\n  }\n\n  const handleClickContinue = () => {\n    props.onClickContinue(userValue);\n  }\n\n  return (\n    <Fragment>\n      <div className=\"app-wrapper min-vh-100 bg-white\">\n        <div className=\"app-main min-vh-100\">\n          <div className=\"app-content p-0\">\n            <div className=\"app-inner-content-layout--main\">\n              <div className=\"flex-grow-1 w-100 d-flex align-items-start\">\n                <div className=\"bg-composed-wrapper--content register-section-1\">\n                  <Grid container spacing={0} className=\"min-vh-100\">\n                    {/* <Grid\n                      item\n                      xs={12}\n                      className=\"d-flex align-items-center\">\n                      <Container maxWidth=\"sm\">\n                        <Button\n                          size=\"large\"\n                          className=\"text-primary\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={()=> props.onClickBack()}>\n                          <span className=\"btn-wrapper--icon\">\n                            <FontAwesomeIcon\n                              icon={['fas', 'arrow-left']}\n                            />\n                          </span>\n                          <span className=\"btn-wrapper--label\">\n                            Back to home\n                          </span>\n                        </Button>\n                      </Container>\n                    </Grid> */}\n                    <Grid\n                    item\n                    xs={12}\n                    className=\"d-flex align-items-center\">\n                      <Container maxWidth=\"sm\">\n                          <h3 className=\"display-4 mb-2 font-weight-bold title text-primary text-center\">\n                            Create your account\n                          </h3>\n                          <p className=\"font-size-lg mb-5 text-black-50 text-center\">\n                            Create your account to enjoy the benefits of johnshub customer account.\n                          </p>\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"Email address\"\n                              fullWidth\n                              placeholder=\"Enter your email address\"\n                              type=\"email\"\n                              // onChange={event => handleChangeEmail(event.target.value)}\n                              onChange={event => handleChangeField('email', event)}\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"First name\"\n                              fullWidth\n                              placeholder=\"Enter your firstname\"\n                              type=\"text\"\n                              onChange={event => handleChangeField('firstName', event)}\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"Last name\"\n                              fullWidth\n                              placeholder=\"Enter your lastname\"\n                              type=\"text\"\n                              onChange={event => handleChangeField('lastName', event)}\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"Billing Address\"\n                              fullWidth\n                              placeholder=\"Enter your billing address\"\n                              type=\"text\"\n                              onChange={event => handleChangeField('billingAddress', event)}\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"City\"\n                              fullWidth\n                              placeholder=\"Enter your city\"\n                              type=\"text\"\n                              onChange={event => handleChangeField('city', event)}\n                            />\n                          </div>\n\n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"Zip Code\"\n                              fullWidth\n                              placeholder=\"Enter your zip code\"\n                              type=\"number\"\n                              onChange={event => handleChangeField('zipCode', event)}\n                            />\n                          </div>\n                          \n                          <div className=\"mb-3\">\n                            <TextField\n                              variant=\"outlined\"\n                              label=\"Phone\"\n                              fullWidth\n                              placeholder=\"Enter your phone number\"\n                              type=\"tel\"\n                              onChange={event => handleChangeField('phoneNumber', event)}\n                            />\n                          </div>\n                          <div className=\"form-group pt-2 mb-4 text-center\">\n                            Already have an account? <a href=\"/Login\">Sign in</a> \n                          </div>\n                          <Button\n                            fullWidth\n                            color=\"primary\"\n                            size=\"large\"\n                            variant=\"contained\"\n                            className=\"mb-5 \"\n                            onClick={handleClickContinue}>\n                            Continue\n                          </Button>\n                      </Container>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default PagesRegisterContent;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = React.forwardRef(function DialogContentText(props, ref) {\n  return React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Container,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst PagesRegisterStep2Content = (props) => {\n  const [userValue, setUserValue] = React.useState({...props.userInfo});\n  const [showAlert, setShowAlert] = React.useState(false);\n\n  const handleChangeField = (name, event) => {\n    setUserValue({\n      ...userValue,\n      [name]: event.target.value\n    } );\n  }\n\n  const handleCreateAccount = () => {\n    console.log('===== this: ', userValue);\n    if(userValue.password1 === userValue.password2) {\n      props.onClickRegister(userValue);\n      return;\n    } else {\n      setShowAlert(true);\n    }\n  }\n\n  const handleCloseAlert = () => {\n    setShowAlert(false);\n  }\n  \n  return (\n    <Fragment>\n      <div className=\"app-wrapper min-vh-100 bg-white\">\n        <div className=\"app-main min-vh-100\">\n          <div className=\"app-content p-0\">\n            <div className=\"app-inner-content-layout--main\">\n              <div className=\"flex-grow-1 w-100 d-flex align-items-start\">\n                <div className=\"bg-composed-wrapper--content register-section-2\">\n                  <Grid container spacing={0} className=\"min-vh-50\">\n                    <Grid\n                      item\n                      xs={12}\n                      md={12}\n                      className=\"d-flex align-items-center\">\n                      <Container maxWidth=\"sm\">\n                        <Button\n                          size=\"large\"\n                          className=\"text-primary\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={()=> props.onClickBack()}>\n                          <span className=\"btn-wrapper--icon\">\n                            <FontAwesomeIcon\n                              icon={['fas', 'arrow-left']}\n                            />\n                          </span>\n                          <span className=\"btn-wrapper--label\">\n                            Back to first\n                          </span>\n                        </Button>\n                      </Container>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      md={12}\n                      className=\"d-flex align-items-center\">\n                      <Container maxWidth=\"sm\">\n                        <h3 className=\"display-4 font-weight-bold text-primary text-center title\">\n                          Finish creating your account\n                        </h3>\n                        <div className=\"mb-3\">\n                          <TextField\n                            variant=\"outlined\"\n                            label=\"Email address\"\n                            fullWidth\n                            placeholder=\"Enter your email address\"\n                            type=\"email\"\n                            value={props.userInfo.email}\n                            disabled\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <TextField\n                            variant=\"outlined\"\n                            label=\"Password\"\n                            fullWidth\n                            placeholder=\"Enter your password\"\n                            type=\"password\"\n                            onChange={event => handleChangeField('password1', event)}\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <TextField\n                            variant=\"outlined\"\n                            label=\"Confirm password\"\n                            fullWidth\n                            placeholder=\"Re-enter your password\"\n                            type=\"password\"\n                            onChange={event => handleChangeField('password2', event)}\n                          />\n                        </div>\n\n                        <Button\n                          fullWidth\n                          color=\"primary\"\n                          size=\"large\"\n                          variant=\"contained\"\n                          className=\"mb-5\"\n                          onClick={handleCreateAccount}>\n                            Continue\n                          </Button>\n                      </Container>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Dialog\n        open={showAlert}\n        onClose={handleCloseAlert}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            The confirm password isn't same with the password.\n            Please re-enter password.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAlert} color=\"primary\" autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nexport default PagesRegisterStep2Content;\n","import React, { Fragment } from 'react';\nimport HeaderHome from '../../components/HeaderSections/HeaderHome';\nimport FooterSection from '../../components/FooterSection';\nimport PagesRegisterContent from '../../components/PagesRegister/PagesRegisterContent';\nimport PagesRegisterStep2Content from '../../components/PagesRegister/PagesRegisterStep2Content';\nimport { signupWithAPI } from '../../services/apis/auth';\n\nexport default function PagesRegister(props) {\n  const [registerStep, setRegisterStep] = React.useState(0);\n  const [userValue, setUserValue] = React.useState({});\n\n  const onRegister = (userInfo) => {\n    const data = {\n      username: userValue.email,\n      ...userValue,\n      ...userInfo\n    }\n    signupWithAPI(data)\n    .then(res => {\n      console.log('===== res: ', res, props);\n      props.history.push('/Login');\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      console.log('===== error: ', error);\n      // ...\n    });\n  };\n\n  const onContinue = (userValue) => {\n    // props.history.push({pathname: '/RegisterCustom', state: {userInfo}});\n    setUserValue({...userValue})\n    setRegisterStep(1);\n  }\n\n  const onBack = () => {\n    if (registerStep === 0) {\n      props.history.push('/');\n      return;\n    } else if (registerStep === 1) {\n      setRegisterStep(0);\n    }\n\n  }\n\n  return (\n    <Fragment>\n      <div className=\"hero-wrapper bg-composed-wrapper bg-white\">\n        <HeaderHome />\n        {registerStep == 0 && <PagesRegisterContent onRegisterClick={onRegister} onClickContinue={onContinue} onClickBack={onBack}/>}\n        {registerStep == 1 && <PagesRegisterStep2Content userInfo={userValue} onClickRegister={onRegister} onClickBack={onBack}/>}\n      </div>\n      <FooterSection />\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}