{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack:///./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack:///./node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","webpack:///./node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","webpack:///./node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","createElement","d","forwardRef","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyUp","_props$size","size","_props$variant","variant","other","chipRef","useRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","concat","capitalize","deleteIconSmall","isValidElement","cloneElement","Cancel","avatarSmall","iconSmall","role","undefined","root","outlined","primary","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","key","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","text","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","contrastText","dark","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","_props$component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","sticky","gutters","lineHeight","listStyle","fontWeight","fontWeightMedium","colorInherit","position","top","zIndex","stripDiacritics","string","normalize","replace","defaultStringify","value","Object","keys","map","join","JSON","stringify","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","_config$trim","trim","limit","options","_ref","inputValue","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onOpen","onInputChange","openProp","open","_props$selectOnFocus","selectOnFocus","valueProp","_props$componentName","componentName","_React$useState","useState","defaultId","setDefaultId","useEffect","Math","round","random","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","index","mouse","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","_useControlled","useControlled","controlled","default","_useControlled2","setValue","isInputValueControlled","_React$useState4","inputValueState","setInputValue","_React$useState5","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","isOpenControlled","_React$useState6","openState","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","hasAttribute","getAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","origin","item","itemIndex","Array","isArray","valueItem","push","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","preventDefault","which","onKeyDown","handleFocus","handleBlur","handleInputChange","handleOptionMouseOver","Number","isTouch","handleOptionTouchStart","handleOptionClick","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","document","activeElement","dirty","groupedOptions","result","indexByKey","Map","currentResultIndex","forEach","get","set","indexCounter","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","_ref2","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","bool","object","any","func","DisablePortal","Close","ArrowDropDown","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","Chip","groupLabel","groupUl","children","renderListOption","optionProps","hasClearIcon","hasPopupIcon","Fragment","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","maxWidth","flexWrap","minWidth","paddingBottom","right","paddingTop","flexGrow","active","transform","modal","body1","maxHeight","minHeight","breakpoints","up","hover","disabledOpacity","background"],"mappings":"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","file":"js/31.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      primary: classes.outlinedPrimary,\n      secondary: classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim,\n      limit = config.limit;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  }\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(optionLabel, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    setValue(newValue);\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'option';\n\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'freeSolo');\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n\n      if (selectOnFocus) {\n        inputRef.current.select();\n      }\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    var result = []; // used to keep track of key and indexes in the result array\n\n    var indexByKey = new Map();\n    var currentResultIndex = 0;\n    filteredOptions.forEach(function (option) {\n      var key = groupBy(option);\n\n      if (indexByKey.get(key) === undefined) {\n        indexByKey.set(key, currentResultIndex);\n        result.push({\n          key: key,\n          options: []\n        });\n        currentResultIndex += 1;\n      }\n\n      result[indexByKey.get(key)].options.push(option);\n    }); // now we can add the `index` property based on the options length\n\n    var indexCounter = 0;\n    result.forEach(function (option) {\n      option.index = indexCounter;\n      indexCounter += option.options.length;\n    });\n    groupedOptions = result;\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      color: theme.palette.action.active,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2,\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0',\n      '& > ul': {\n        maxHeight: '40vh',\n        overflow: 'auto'\n      }\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      position: 'relative'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return React.createElement(\"div\", other);\n}\n\nvar _ref = React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disableListWrap\", \"disableOpenOnFocus\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onInputChange\", \"onOpen\", \"open\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return React.createElement(\"li\", {\n      key: params.key\n    }, React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.key), React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.any, PropTypes.array]),\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected.\n   * Uses strict equality by default.\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clearning the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.oneOfType([PropTypes.any, PropTypes.array])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);"],"sourceRoot":""}