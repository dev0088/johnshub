{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","webpack:///./node_modules/@material-ui/core/esm/Chip/Chip.js","webpack:///./src/example-components/FormsInputSelect/FormsInputSelectMaterial/index.js","webpack:///./src/example-pages/FormsInputSelect/index.js"],"names":["createSvgIcon","createElement","d","forwardRef","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyUp","_props$size","size","_props$variant","variant","other","chipRef","useRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","concat","capitalize","deleteIconSmall","isValidElement","cloneElement","Cancel","avatarSmall","iconSmall","role","undefined","root","outlined","primary","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","key","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","text","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","contrastText","dark","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","useStyles","makeStyles","formControl","chips","flexWrap","chip","noLabel","marginTop","spacing","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","names","getStyles","personName","fontWeight","indexOf","fontWeightRegular","fontWeightMedium","InputLabel","id","Input","MenuItem","value","shrink","htmlFor","LivePreviewExample","useTheme","setPersonName","React","useState","handleChange","Grid","container","item","xs","md","FormControl","Select","labelId","multiple","onChange","input","map","renderValue","selected","join","Checkbox","checked","ListItemText","Chip","clsx","displayEmpty","length","native","options","i","l","push","inputProps","titleHeading","titleDescription","sectionHeading","FormsInputSelect"],"mappings":"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","file":"js/33.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      primary: classes.outlinedPrimary,\n      secondary: classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import React, { Fragment } from 'react';\n\nimport clsx from 'clsx';\n\nimport {\n  Grid,\n  Input,\n  InputLabel,\n  Checkbox,\n  MenuItem,\n  FormControl,\n  Select,\n  ListItemText\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder'\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function LivePreviewExample() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12} md={6}>\n          <div className=\"m-3\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"demo-mutiple-name\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<Input />}\n                MenuProps={MenuProps}>\n                {names.map(name => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, personName, theme)}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className=\"m-3\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-checkbox-label\"\n                id=\"demo-mutiple-checkbox\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<Input />}\n                renderValue={selected => selected.join(', ')}\n                MenuProps={MenuProps}>\n                {names.map(name => (\n                  <MenuItem key={name} value={name}>\n                    <Checkbox checked={personName.indexOf(name) > -1} />\n                    <ListItemText primary={name} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className=\"m-3\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-chip-label\"\n                id=\"demo-mutiple-chip\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {selected.map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        className={classes.chip}\n                      />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}>\n                {names.map(name => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, personName, theme)}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className=\"m-3\">\n            <FormControl className={clsx(classes.formControl, classes.noLabel)}>\n              <Select\n                multiple\n                displayEmpty\n                value={personName}\n                onChange={handleChange}\n                input={<Input />}\n                renderValue={selected => {\n                  if (selected.length === 0) {\n                    return <em>Placeholder</em>;\n                  }\n\n                  return selected.join(', ');\n                }}\n                MenuProps={MenuProps}>\n                <MenuItem disabled value=\"\">\n                  <em>Placeholder</em>\n                </MenuItem>\n                {names.map(name => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, personName, theme)}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className=\"m-3\">\n            <FormControl className={classes.formControl}>\n              <InputLabel shrink htmlFor=\"select-multiple-native\">\n                Native\n              </InputLabel>\n              <Select\n                multiple\n                native\n                value={personName}\n                onChange={handleChangeMultiple}\n                inputProps={{\n                  id: 'select-multiple-native'\n                }}>\n                {names.map(name => (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\n\nimport FormsInputSelectMaterial from '../../example-components/FormsInputSelect/FormsInputSelectMaterial';\nexport default function FormsInputSelect() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Input Select\"\n        titleDescription=\"Create fancy multi select dropdown menus for a better user experience.\"\n      />\n      <ExampleWrapperSimple sectionHeading=\"Material-UI Select\">\n        <FormsInputSelectMaterial />\n      </ExampleWrapperSimple>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}